//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.4.4
//     from Assets/Input/PlayerControls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerControls : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerControls()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerControls"",
    ""maps"": [
        {
            ""name"": ""Player"",
            ""id"": ""cecec2e6-2d8c-4ae9-b468-acb6bd9a8bb2"",
            ""actions"": [
                {
                    ""name"": ""Move"",
                    ""type"": ""Value"",
                    ""id"": ""86304736-b62b-48d1-8655-1a24679648e4"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Look"",
                    ""type"": ""Value"",
                    ""id"": ""1d29503a-500b-4235-8901-b8b1fa699c27"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Jump"",
                    ""type"": ""Button"",
                    ""id"": ""97223eab-42f2-436e-87ec-82295e7d8085"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Sprint"",
                    ""type"": ""Button"",
                    ""id"": ""38a55325-f905-4e3c-8815-aad6c5fbf724"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Interact"",
                    ""type"": ""Button"",
                    ""id"": ""ac7218b7-b03e-4aa2-9e04-653e6e22b3e1"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""OpenItemMenu"",
                    ""type"": ""Button"",
                    ""id"": ""32d15b03-299c-49ca-8dcf-8cb3041407db"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""OpenTimeMenu"",
                    ""type"": ""Button"",
                    ""id"": ""fa55da5c-0cf1-4af9-8935-6e9ea46ed89f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""OpenMainMenu"",
                    ""type"": ""Button"",
                    ""id"": ""d35f7217-2607-4443-9bf1-090bac3856f6"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""OpenTradesMenu"",
                    ""type"": ""Button"",
                    ""id"": ""d0007a7e-b337-45fe-b69d-b42a7786a4b7"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""ae9e8d1c-352f-43e0-b3ad-212dbcbaf03f"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""ea3e21b6-1902-4ec0-8a38-297987e89b4f"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""5c62e019-3063-410c-8faf-f503dd7e89ff"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""4c266feb-f319-45d0-ac23-6eaad3c263a3"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""2ee83409-4c04-44bd-abe6-431c66987593"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""9fb47161-5179-42dc-b4ee-2a366a3dfe43"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": ""ScaleVector2(x=1.5,y=1.5)"",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""39e0e3aa-dfc5-4480-b2cc-316713021dbf"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Look"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""23949adc-0ef9-45e1-ba97-01799eb99e4f"",
                    ""path"": ""<Gamepad>/rightStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Look"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b33e5422-6a58-4ec1-adaf-bc60ff6558c3"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""50090ca2-d452-4527-8962-cba0db945a99"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""65633b5e-49b5-4cfb-9012-e0497b7e99f6"",
                    ""path"": ""<Keyboard>/shift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Sprint"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7c597513-0e34-4a56-8a45-1554fa53ece1"",
                    ""path"": ""<Gamepad>/leftTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Sprint"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""487037a9-c163-4b93-9499-7f979a15b64b"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f48a5021-d87a-4121-8952-46b9a87f5d88"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""00c04db0-0f9e-4455-be63-9ecb545f5789"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""OpenItemMenu"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a4b10293-e3ba-469a-8a29-b787cff3769b"",
                    ""path"": ""<Gamepad>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""OpenItemMenu"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""35fdf62c-cf2f-48b7-a22f-f6f0e81fe47c"",
                    ""path"": ""<Keyboard>/r"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""OpenTimeMenu"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2eb5d1b1-363c-492b-b945-99ded25b4b72"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""OpenTimeMenu"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""36413a92-9693-408e-a058-6cb611f5c30b"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""OpenMainMenu"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ec1ae48e-ad1f-458a-892a-f3a67bfaa936"",
                    ""path"": ""<Gamepad>/start"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""OpenMainMenu"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""307fde0f-e7d4-4469-a9ba-d7595bbafc65"",
                    ""path"": ""<Keyboard>/f"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""OpenTradesMenu"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7361ac23-dc56-4be5-ab9d-283ad85d6705"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""OpenTradesMenu"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""UI"",
            ""id"": ""d88470d7-27ea-4bfb-9574-e3fd75101730"",
            ""actions"": [
                {
                    ""name"": ""CloseItemMenu"",
                    ""type"": ""Button"",
                    ""id"": ""be5ae219-cf09-4642-8cf4-c48a0edc62f7"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MoveItemSelection"",
                    ""type"": ""Value"",
                    ""id"": ""15269872-3f42-4438-9288-62303f5bdab2"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""RemoveSelectedItem"",
                    ""type"": ""Button"",
                    ""id"": ""c62c3528-db59-49d2-bf4a-d5ebf40ce971"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""0f2a93b2-7761-4e7c-88f8-c63ebe49e0c5"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""CloseItemMenu"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a06d09c1-dbbb-40b3-a32d-dcfbfbc97563"",
                    ""path"": ""<Gamepad>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""CloseItemMenu"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""WASD 2D Vector"",
                    ""id"": ""0273321c-65dc-489d-a03d-60a6151a3adc"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""MoveItemSelection"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""fcd578c0-05d0-4a42-b4b5-374db5a4d9f2"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""MoveItemSelection"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""deb40319-f54f-449a-8527-86444bba18b5"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""MoveItemSelection"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""5d518df1-011d-4a9d-97f9-119ad5cb7e60"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""MoveItemSelection"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""dde6e468-c1c8-460e-8364-5565696a743e"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""MoveItemSelection"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""6f2998c1-7263-416a-84b8-e007361fb588"",
                    ""path"": ""<Gamepad>/dpad"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""MoveItemSelection"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""fd2bed78-4757-440f-8624-f38c97a7a46b"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""RemoveSelectedItem"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""86f5dc61-9ec3-4cbf-9a53-68bcf5442ecd"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""RemoveSelectedItem"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Dialogue"",
            ""id"": ""9e23e8fd-0156-4e9e-b31a-31961fccb746"",
            ""actions"": [
                {
                    ""name"": ""NextOption"",
                    ""type"": ""Button"",
                    ""id"": ""28d14972-7ba1-4856-a435-c6445d4b3c8d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""PrevOption"",
                    ""type"": ""Button"",
                    ""id"": ""84ae7448-a40c-4281-ac17-79a1ba56670f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SelectOption"",
                    ""type"": ""Button"",
                    ""id"": ""7c1d62c9-b168-4b05-86c2-077b562be07c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""EndConversation"",
                    ""type"": ""Button"",
                    ""id"": ""b63b616b-bd5b-4a78-acd7-7617933fb0e4"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""51ca6661-a41d-4134-8c66-47c2bb72ac72"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""NextOption"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4f3d6ffd-aa97-499e-88ac-38fe66f0b308"",
                    ""path"": ""<Gamepad>/dpad/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""NextOption"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2564d17d-54a7-4fc2-b2af-233722f6c8f9"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""PrevOption"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9af2704a-e7e0-4337-89c0-6dc219325e85"",
                    ""path"": ""<Gamepad>/dpad/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""PrevOption"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""88f6cbf4-11dc-4ddd-a7c0-b6ef02c00383"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""SelectOption"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b7387a35-1fba-475d-bb96-50f8749cd9f2"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""SelectOption"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""bde3b366-32fd-4a46-be86-58988eb85e49"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""EndConversation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5254bb8f-2ba2-4ad2-aa26-2eae78c18181"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""EndConversation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""TimeUI"",
            ""id"": ""301ffced-2f10-4cf0-8a8c-8aacc713a2a8"",
            ""actions"": [
                {
                    ""name"": ""MoveTimeSelection"",
                    ""type"": ""Value"",
                    ""id"": ""af11a1ef-22f9-492d-a77a-597a4b0243a7"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""CloseTimeMenu"",
                    ""type"": ""Button"",
                    ""id"": ""bf9184c1-8c8e-45c0-9f7e-49313a0fa233"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""WASD 1D Vector"",
                    ""id"": ""bfd9ebaa-36ed-436a-8a39-4cf71d713952"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""MoveTimeSelection"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Negative"",
                    ""id"": ""677c5ea8-faa4-4e64-a21d-ad320ed3adbe"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""MoveTimeSelection"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Positive"",
                    ""id"": ""fc0e2565-4b3d-4a29-9d12-4b4f82ed133f"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""MoveTimeSelection"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""DPAD 1D Vector"",
                    ""id"": ""33a11e8d-f2ed-41dd-9d6c-002786eea8a7"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""MoveTimeSelection"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Negative"",
                    ""id"": ""3f813fe4-245c-46b8-b4b8-7a6b1d9ece56"",
                    ""path"": ""<Gamepad>/dpad/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""MoveTimeSelection"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Positive"",
                    ""id"": ""b33fedeb-ed3b-4ecc-9917-75501f54f752"",
                    ""path"": ""<Gamepad>/dpad/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""MoveTimeSelection"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""72184fc3-2961-4a1a-8cff-f068685a6495"",
                    ""path"": ""<Keyboard>/r"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""CloseTimeMenu"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""98df9cc0-0cd7-4433-8946-7cb6f83acc78"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CloseTimeMenu"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""MainMenu"",
            ""id"": ""5ccaa48b-37da-4da6-b3ce-4287bd1b02c3"",
            ""actions"": [
                {
                    ""name"": ""MoveSelection"",
                    ""type"": ""Value"",
                    ""id"": ""8aeed882-8f59-46d0-9ecb-81de983212bb"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Select"",
                    ""type"": ""Button"",
                    ""id"": ""b5b882e9-fc63-4348-8189-7a7943e309fb"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Continue"",
                    ""type"": ""Button"",
                    ""id"": ""7756772a-a4cc-4100-b25d-fe039abe470c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""WASD 1D Axis"",
                    ""id"": ""3c8a7109-43ea-4007-a401-f92cc38e2abd"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveSelection"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""0affd0df-1cee-4152-9e43-2bbd4f3050cf"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""MoveSelection"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""0d6ff045-09b0-410d-b3a4-f02b31943e6c"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""MoveSelection"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""DPAD 1D Axis"",
                    ""id"": ""82658547-7a3e-4364-9791-a9d81cecd4be"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveSelection"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""6c1edda4-999d-4d39-b4c0-584833faa6ae"",
                    ""path"": ""<Gamepad>/dpad/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""MoveSelection"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""a7a359f7-1903-423c-97bb-cb52012e9d65"",
                    ""path"": ""<Gamepad>/dpad/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveSelection"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""65bfa58a-0bb7-45ce-997b-4366d79e6c1b"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Select"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ebf1ec32-49e9-4798-a3ac-ce1a60e0dbd3"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Select"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""20881463-2662-4b8f-997d-5806bd284dac"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Continue"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0ab1593e-0846-4856-9686-7347348a796e"",
                    ""path"": ""<Gamepad>/start"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Continue"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""ControlsMenu"",
            ""id"": ""ef8fea3e-6dde-4420-a52f-cebe8f9dd924"",
            ""actions"": [
                {
                    ""name"": ""Slider"",
                    ""type"": ""Value"",
                    ""id"": ""6528aa27-3187-4e1f-be8a-aa1ab9552d86"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Back"",
                    ""type"": ""Button"",
                    ""id"": ""542b882d-b6e1-4a15-90d9-0b7bb1190e0c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""WASD 1D Axis"",
                    ""id"": ""4f4daa9b-1669-4f3b-a0b2-3e5f24a5e56f"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Slider"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""dec24639-d17b-468e-afc1-e2bcd412eef4"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Slider"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""dd13f12c-a0bf-407f-bcd5-569465dc62e9"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Slider"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""DPAD 1D Axis"",
                    ""id"": ""1bef7dd1-924d-42f5-b1bd-580ca6e44ed0"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Slider"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""896995e5-7b12-4f6c-a5a3-80d7711398a1"",
                    ""path"": ""<Gamepad>/dpad/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Slider"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""6583ba78-b03c-4885-a815-d37d3c8a3a77"",
                    ""path"": ""<Gamepad>/dpad/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Slider"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""21bf73e4-b40e-40b9-90d9-fbc4c73fb263"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Back"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b56fd3fa-d169-4acb-9415-6f97ab177983"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Back"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""TradesMenu"",
            ""id"": ""31955725-a074-45e1-9757-80d40be8ab30"",
            ""actions"": [
                {
                    ""name"": ""Scroll"",
                    ""type"": ""Value"",
                    ""id"": ""6457069f-d610-4dbf-9235-4effe4975972"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Close"",
                    ""type"": ""Button"",
                    ""id"": ""bb2804d6-2288-43eb-a607-d616499fbcf1"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""66c9c8b7-1cce-48e8-a2c5-a46d53a42cb9"",
                    ""path"": ""<Keyboard>/f"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Close"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3c67485b-f65f-42eb-8223-9881b12b9548"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Close"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""WASD 1D Axis"",
                    ""id"": ""edbd2418-eca1-4ded-900e-6f2131972c6b"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Scroll"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""ca35bcd9-8311-4f8d-8a85-da0e595116fb"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Scroll"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""13c82283-7ef4-41d8-b2f3-fc0dea30c231"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Scroll"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""DPAD 1D Axis"",
                    ""id"": ""ff833f3e-3b02-4cf4-88b1-9e2d1dd5a3d2"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Scroll"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""a709a3e8-3d40-4382-acc7-816be811eed2"",
                    ""path"": ""<Gamepad>/dpad/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Scroll"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""ffcc5c6d-5bfb-43f1-9600-e94d6b430684"",
                    ""path"": ""<Gamepad>/leftStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Scroll"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""Gamepad"",
            ""bindingGroup"": ""Gamepad"",
            ""devices"": [
                {
                    ""devicePath"": ""<Gamepad>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""Keyboard"",
            ""bindingGroup"": ""Keyboard"",
            ""devices"": [
                {
                    ""devicePath"": ""<Keyboard>"",
                    ""isOptional"": false,
                    ""isOR"": false
                },
                {
                    ""devicePath"": ""<Mouse>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        }
    ]
}");
        // Player
        m_Player = asset.FindActionMap("Player", throwIfNotFound: true);
        m_Player_Move = m_Player.FindAction("Move", throwIfNotFound: true);
        m_Player_Look = m_Player.FindAction("Look", throwIfNotFound: true);
        m_Player_Jump = m_Player.FindAction("Jump", throwIfNotFound: true);
        m_Player_Sprint = m_Player.FindAction("Sprint", throwIfNotFound: true);
        m_Player_Interact = m_Player.FindAction("Interact", throwIfNotFound: true);
        m_Player_OpenItemMenu = m_Player.FindAction("OpenItemMenu", throwIfNotFound: true);
        m_Player_OpenTimeMenu = m_Player.FindAction("OpenTimeMenu", throwIfNotFound: true);
        m_Player_OpenMainMenu = m_Player.FindAction("OpenMainMenu", throwIfNotFound: true);
        m_Player_OpenTradesMenu = m_Player.FindAction("OpenTradesMenu", throwIfNotFound: true);
        // UI
        m_UI = asset.FindActionMap("UI", throwIfNotFound: true);
        m_UI_CloseItemMenu = m_UI.FindAction("CloseItemMenu", throwIfNotFound: true);
        m_UI_MoveItemSelection = m_UI.FindAction("MoveItemSelection", throwIfNotFound: true);
        m_UI_RemoveSelectedItem = m_UI.FindAction("RemoveSelectedItem", throwIfNotFound: true);
        // Dialogue
        m_Dialogue = asset.FindActionMap("Dialogue", throwIfNotFound: true);
        m_Dialogue_NextOption = m_Dialogue.FindAction("NextOption", throwIfNotFound: true);
        m_Dialogue_PrevOption = m_Dialogue.FindAction("PrevOption", throwIfNotFound: true);
        m_Dialogue_SelectOption = m_Dialogue.FindAction("SelectOption", throwIfNotFound: true);
        m_Dialogue_EndConversation = m_Dialogue.FindAction("EndConversation", throwIfNotFound: true);
        // TimeUI
        m_TimeUI = asset.FindActionMap("TimeUI", throwIfNotFound: true);
        m_TimeUI_MoveTimeSelection = m_TimeUI.FindAction("MoveTimeSelection", throwIfNotFound: true);
        m_TimeUI_CloseTimeMenu = m_TimeUI.FindAction("CloseTimeMenu", throwIfNotFound: true);
        // MainMenu
        m_MainMenu = asset.FindActionMap("MainMenu", throwIfNotFound: true);
        m_MainMenu_MoveSelection = m_MainMenu.FindAction("MoveSelection", throwIfNotFound: true);
        m_MainMenu_Select = m_MainMenu.FindAction("Select", throwIfNotFound: true);
        m_MainMenu_Continue = m_MainMenu.FindAction("Continue", throwIfNotFound: true);
        // ControlsMenu
        m_ControlsMenu = asset.FindActionMap("ControlsMenu", throwIfNotFound: true);
        m_ControlsMenu_Slider = m_ControlsMenu.FindAction("Slider", throwIfNotFound: true);
        m_ControlsMenu_Back = m_ControlsMenu.FindAction("Back", throwIfNotFound: true);
        // TradesMenu
        m_TradesMenu = asset.FindActionMap("TradesMenu", throwIfNotFound: true);
        m_TradesMenu_Scroll = m_TradesMenu.FindAction("Scroll", throwIfNotFound: true);
        m_TradesMenu_Close = m_TradesMenu.FindAction("Close", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Player
    private readonly InputActionMap m_Player;
    private IPlayerActions m_PlayerActionsCallbackInterface;
    private readonly InputAction m_Player_Move;
    private readonly InputAction m_Player_Look;
    private readonly InputAction m_Player_Jump;
    private readonly InputAction m_Player_Sprint;
    private readonly InputAction m_Player_Interact;
    private readonly InputAction m_Player_OpenItemMenu;
    private readonly InputAction m_Player_OpenTimeMenu;
    private readonly InputAction m_Player_OpenMainMenu;
    private readonly InputAction m_Player_OpenTradesMenu;
    public struct PlayerActions
    {
        private @PlayerControls m_Wrapper;
        public PlayerActions(@PlayerControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Move => m_Wrapper.m_Player_Move;
        public InputAction @Look => m_Wrapper.m_Player_Look;
        public InputAction @Jump => m_Wrapper.m_Player_Jump;
        public InputAction @Sprint => m_Wrapper.m_Player_Sprint;
        public InputAction @Interact => m_Wrapper.m_Player_Interact;
        public InputAction @OpenItemMenu => m_Wrapper.m_Player_OpenItemMenu;
        public InputAction @OpenTimeMenu => m_Wrapper.m_Player_OpenTimeMenu;
        public InputAction @OpenMainMenu => m_Wrapper.m_Player_OpenMainMenu;
        public InputAction @OpenTradesMenu => m_Wrapper.m_Player_OpenTradesMenu;
        public InputActionMap Get() { return m_Wrapper.m_Player; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerActions set) { return set.Get(); }
        public void SetCallbacks(IPlayerActions instance)
        {
            if (m_Wrapper.m_PlayerActionsCallbackInterface != null)
            {
                @Move.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMove;
                @Move.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMove;
                @Move.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMove;
                @Look.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnLook;
                @Look.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnLook;
                @Look.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnLook;
                @Jump.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnJump;
                @Jump.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnJump;
                @Jump.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnJump;
                @Sprint.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnSprint;
                @Sprint.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnSprint;
                @Sprint.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnSprint;
                @Interact.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnInteract;
                @Interact.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnInteract;
                @Interact.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnInteract;
                @OpenItemMenu.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnOpenItemMenu;
                @OpenItemMenu.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnOpenItemMenu;
                @OpenItemMenu.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnOpenItemMenu;
                @OpenTimeMenu.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnOpenTimeMenu;
                @OpenTimeMenu.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnOpenTimeMenu;
                @OpenTimeMenu.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnOpenTimeMenu;
                @OpenMainMenu.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnOpenMainMenu;
                @OpenMainMenu.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnOpenMainMenu;
                @OpenMainMenu.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnOpenMainMenu;
                @OpenTradesMenu.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnOpenTradesMenu;
                @OpenTradesMenu.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnOpenTradesMenu;
                @OpenTradesMenu.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnOpenTradesMenu;
            }
            m_Wrapper.m_PlayerActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Move.started += instance.OnMove;
                @Move.performed += instance.OnMove;
                @Move.canceled += instance.OnMove;
                @Look.started += instance.OnLook;
                @Look.performed += instance.OnLook;
                @Look.canceled += instance.OnLook;
                @Jump.started += instance.OnJump;
                @Jump.performed += instance.OnJump;
                @Jump.canceled += instance.OnJump;
                @Sprint.started += instance.OnSprint;
                @Sprint.performed += instance.OnSprint;
                @Sprint.canceled += instance.OnSprint;
                @Interact.started += instance.OnInteract;
                @Interact.performed += instance.OnInteract;
                @Interact.canceled += instance.OnInteract;
                @OpenItemMenu.started += instance.OnOpenItemMenu;
                @OpenItemMenu.performed += instance.OnOpenItemMenu;
                @OpenItemMenu.canceled += instance.OnOpenItemMenu;
                @OpenTimeMenu.started += instance.OnOpenTimeMenu;
                @OpenTimeMenu.performed += instance.OnOpenTimeMenu;
                @OpenTimeMenu.canceled += instance.OnOpenTimeMenu;
                @OpenMainMenu.started += instance.OnOpenMainMenu;
                @OpenMainMenu.performed += instance.OnOpenMainMenu;
                @OpenMainMenu.canceled += instance.OnOpenMainMenu;
                @OpenTradesMenu.started += instance.OnOpenTradesMenu;
                @OpenTradesMenu.performed += instance.OnOpenTradesMenu;
                @OpenTradesMenu.canceled += instance.OnOpenTradesMenu;
            }
        }
    }
    public PlayerActions @Player => new PlayerActions(this);

    // UI
    private readonly InputActionMap m_UI;
    private IUIActions m_UIActionsCallbackInterface;
    private readonly InputAction m_UI_CloseItemMenu;
    private readonly InputAction m_UI_MoveItemSelection;
    private readonly InputAction m_UI_RemoveSelectedItem;
    public struct UIActions
    {
        private @PlayerControls m_Wrapper;
        public UIActions(@PlayerControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @CloseItemMenu => m_Wrapper.m_UI_CloseItemMenu;
        public InputAction @MoveItemSelection => m_Wrapper.m_UI_MoveItemSelection;
        public InputAction @RemoveSelectedItem => m_Wrapper.m_UI_RemoveSelectedItem;
        public InputActionMap Get() { return m_Wrapper.m_UI; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(UIActions set) { return set.Get(); }
        public void SetCallbacks(IUIActions instance)
        {
            if (m_Wrapper.m_UIActionsCallbackInterface != null)
            {
                @CloseItemMenu.started -= m_Wrapper.m_UIActionsCallbackInterface.OnCloseItemMenu;
                @CloseItemMenu.performed -= m_Wrapper.m_UIActionsCallbackInterface.OnCloseItemMenu;
                @CloseItemMenu.canceled -= m_Wrapper.m_UIActionsCallbackInterface.OnCloseItemMenu;
                @MoveItemSelection.started -= m_Wrapper.m_UIActionsCallbackInterface.OnMoveItemSelection;
                @MoveItemSelection.performed -= m_Wrapper.m_UIActionsCallbackInterface.OnMoveItemSelection;
                @MoveItemSelection.canceled -= m_Wrapper.m_UIActionsCallbackInterface.OnMoveItemSelection;
                @RemoveSelectedItem.started -= m_Wrapper.m_UIActionsCallbackInterface.OnRemoveSelectedItem;
                @RemoveSelectedItem.performed -= m_Wrapper.m_UIActionsCallbackInterface.OnRemoveSelectedItem;
                @RemoveSelectedItem.canceled -= m_Wrapper.m_UIActionsCallbackInterface.OnRemoveSelectedItem;
            }
            m_Wrapper.m_UIActionsCallbackInterface = instance;
            if (instance != null)
            {
                @CloseItemMenu.started += instance.OnCloseItemMenu;
                @CloseItemMenu.performed += instance.OnCloseItemMenu;
                @CloseItemMenu.canceled += instance.OnCloseItemMenu;
                @MoveItemSelection.started += instance.OnMoveItemSelection;
                @MoveItemSelection.performed += instance.OnMoveItemSelection;
                @MoveItemSelection.canceled += instance.OnMoveItemSelection;
                @RemoveSelectedItem.started += instance.OnRemoveSelectedItem;
                @RemoveSelectedItem.performed += instance.OnRemoveSelectedItem;
                @RemoveSelectedItem.canceled += instance.OnRemoveSelectedItem;
            }
        }
    }
    public UIActions @UI => new UIActions(this);

    // Dialogue
    private readonly InputActionMap m_Dialogue;
    private IDialogueActions m_DialogueActionsCallbackInterface;
    private readonly InputAction m_Dialogue_NextOption;
    private readonly InputAction m_Dialogue_PrevOption;
    private readonly InputAction m_Dialogue_SelectOption;
    private readonly InputAction m_Dialogue_EndConversation;
    public struct DialogueActions
    {
        private @PlayerControls m_Wrapper;
        public DialogueActions(@PlayerControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @NextOption => m_Wrapper.m_Dialogue_NextOption;
        public InputAction @PrevOption => m_Wrapper.m_Dialogue_PrevOption;
        public InputAction @SelectOption => m_Wrapper.m_Dialogue_SelectOption;
        public InputAction @EndConversation => m_Wrapper.m_Dialogue_EndConversation;
        public InputActionMap Get() { return m_Wrapper.m_Dialogue; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(DialogueActions set) { return set.Get(); }
        public void SetCallbacks(IDialogueActions instance)
        {
            if (m_Wrapper.m_DialogueActionsCallbackInterface != null)
            {
                @NextOption.started -= m_Wrapper.m_DialogueActionsCallbackInterface.OnNextOption;
                @NextOption.performed -= m_Wrapper.m_DialogueActionsCallbackInterface.OnNextOption;
                @NextOption.canceled -= m_Wrapper.m_DialogueActionsCallbackInterface.OnNextOption;
                @PrevOption.started -= m_Wrapper.m_DialogueActionsCallbackInterface.OnPrevOption;
                @PrevOption.performed -= m_Wrapper.m_DialogueActionsCallbackInterface.OnPrevOption;
                @PrevOption.canceled -= m_Wrapper.m_DialogueActionsCallbackInterface.OnPrevOption;
                @SelectOption.started -= m_Wrapper.m_DialogueActionsCallbackInterface.OnSelectOption;
                @SelectOption.performed -= m_Wrapper.m_DialogueActionsCallbackInterface.OnSelectOption;
                @SelectOption.canceled -= m_Wrapper.m_DialogueActionsCallbackInterface.OnSelectOption;
                @EndConversation.started -= m_Wrapper.m_DialogueActionsCallbackInterface.OnEndConversation;
                @EndConversation.performed -= m_Wrapper.m_DialogueActionsCallbackInterface.OnEndConversation;
                @EndConversation.canceled -= m_Wrapper.m_DialogueActionsCallbackInterface.OnEndConversation;
            }
            m_Wrapper.m_DialogueActionsCallbackInterface = instance;
            if (instance != null)
            {
                @NextOption.started += instance.OnNextOption;
                @NextOption.performed += instance.OnNextOption;
                @NextOption.canceled += instance.OnNextOption;
                @PrevOption.started += instance.OnPrevOption;
                @PrevOption.performed += instance.OnPrevOption;
                @PrevOption.canceled += instance.OnPrevOption;
                @SelectOption.started += instance.OnSelectOption;
                @SelectOption.performed += instance.OnSelectOption;
                @SelectOption.canceled += instance.OnSelectOption;
                @EndConversation.started += instance.OnEndConversation;
                @EndConversation.performed += instance.OnEndConversation;
                @EndConversation.canceled += instance.OnEndConversation;
            }
        }
    }
    public DialogueActions @Dialogue => new DialogueActions(this);

    // TimeUI
    private readonly InputActionMap m_TimeUI;
    private ITimeUIActions m_TimeUIActionsCallbackInterface;
    private readonly InputAction m_TimeUI_MoveTimeSelection;
    private readonly InputAction m_TimeUI_CloseTimeMenu;
    public struct TimeUIActions
    {
        private @PlayerControls m_Wrapper;
        public TimeUIActions(@PlayerControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @MoveTimeSelection => m_Wrapper.m_TimeUI_MoveTimeSelection;
        public InputAction @CloseTimeMenu => m_Wrapper.m_TimeUI_CloseTimeMenu;
        public InputActionMap Get() { return m_Wrapper.m_TimeUI; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(TimeUIActions set) { return set.Get(); }
        public void SetCallbacks(ITimeUIActions instance)
        {
            if (m_Wrapper.m_TimeUIActionsCallbackInterface != null)
            {
                @MoveTimeSelection.started -= m_Wrapper.m_TimeUIActionsCallbackInterface.OnMoveTimeSelection;
                @MoveTimeSelection.performed -= m_Wrapper.m_TimeUIActionsCallbackInterface.OnMoveTimeSelection;
                @MoveTimeSelection.canceled -= m_Wrapper.m_TimeUIActionsCallbackInterface.OnMoveTimeSelection;
                @CloseTimeMenu.started -= m_Wrapper.m_TimeUIActionsCallbackInterface.OnCloseTimeMenu;
                @CloseTimeMenu.performed -= m_Wrapper.m_TimeUIActionsCallbackInterface.OnCloseTimeMenu;
                @CloseTimeMenu.canceled -= m_Wrapper.m_TimeUIActionsCallbackInterface.OnCloseTimeMenu;
            }
            m_Wrapper.m_TimeUIActionsCallbackInterface = instance;
            if (instance != null)
            {
                @MoveTimeSelection.started += instance.OnMoveTimeSelection;
                @MoveTimeSelection.performed += instance.OnMoveTimeSelection;
                @MoveTimeSelection.canceled += instance.OnMoveTimeSelection;
                @CloseTimeMenu.started += instance.OnCloseTimeMenu;
                @CloseTimeMenu.performed += instance.OnCloseTimeMenu;
                @CloseTimeMenu.canceled += instance.OnCloseTimeMenu;
            }
        }
    }
    public TimeUIActions @TimeUI => new TimeUIActions(this);

    // MainMenu
    private readonly InputActionMap m_MainMenu;
    private IMainMenuActions m_MainMenuActionsCallbackInterface;
    private readonly InputAction m_MainMenu_MoveSelection;
    private readonly InputAction m_MainMenu_Select;
    private readonly InputAction m_MainMenu_Continue;
    public struct MainMenuActions
    {
        private @PlayerControls m_Wrapper;
        public MainMenuActions(@PlayerControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @MoveSelection => m_Wrapper.m_MainMenu_MoveSelection;
        public InputAction @Select => m_Wrapper.m_MainMenu_Select;
        public InputAction @Continue => m_Wrapper.m_MainMenu_Continue;
        public InputActionMap Get() { return m_Wrapper.m_MainMenu; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(MainMenuActions set) { return set.Get(); }
        public void SetCallbacks(IMainMenuActions instance)
        {
            if (m_Wrapper.m_MainMenuActionsCallbackInterface != null)
            {
                @MoveSelection.started -= m_Wrapper.m_MainMenuActionsCallbackInterface.OnMoveSelection;
                @MoveSelection.performed -= m_Wrapper.m_MainMenuActionsCallbackInterface.OnMoveSelection;
                @MoveSelection.canceled -= m_Wrapper.m_MainMenuActionsCallbackInterface.OnMoveSelection;
                @Select.started -= m_Wrapper.m_MainMenuActionsCallbackInterface.OnSelect;
                @Select.performed -= m_Wrapper.m_MainMenuActionsCallbackInterface.OnSelect;
                @Select.canceled -= m_Wrapper.m_MainMenuActionsCallbackInterface.OnSelect;
                @Continue.started -= m_Wrapper.m_MainMenuActionsCallbackInterface.OnContinue;
                @Continue.performed -= m_Wrapper.m_MainMenuActionsCallbackInterface.OnContinue;
                @Continue.canceled -= m_Wrapper.m_MainMenuActionsCallbackInterface.OnContinue;
            }
            m_Wrapper.m_MainMenuActionsCallbackInterface = instance;
            if (instance != null)
            {
                @MoveSelection.started += instance.OnMoveSelection;
                @MoveSelection.performed += instance.OnMoveSelection;
                @MoveSelection.canceled += instance.OnMoveSelection;
                @Select.started += instance.OnSelect;
                @Select.performed += instance.OnSelect;
                @Select.canceled += instance.OnSelect;
                @Continue.started += instance.OnContinue;
                @Continue.performed += instance.OnContinue;
                @Continue.canceled += instance.OnContinue;
            }
        }
    }
    public MainMenuActions @MainMenu => new MainMenuActions(this);

    // ControlsMenu
    private readonly InputActionMap m_ControlsMenu;
    private IControlsMenuActions m_ControlsMenuActionsCallbackInterface;
    private readonly InputAction m_ControlsMenu_Slider;
    private readonly InputAction m_ControlsMenu_Back;
    public struct ControlsMenuActions
    {
        private @PlayerControls m_Wrapper;
        public ControlsMenuActions(@PlayerControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Slider => m_Wrapper.m_ControlsMenu_Slider;
        public InputAction @Back => m_Wrapper.m_ControlsMenu_Back;
        public InputActionMap Get() { return m_Wrapper.m_ControlsMenu; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(ControlsMenuActions set) { return set.Get(); }
        public void SetCallbacks(IControlsMenuActions instance)
        {
            if (m_Wrapper.m_ControlsMenuActionsCallbackInterface != null)
            {
                @Slider.started -= m_Wrapper.m_ControlsMenuActionsCallbackInterface.OnSlider;
                @Slider.performed -= m_Wrapper.m_ControlsMenuActionsCallbackInterface.OnSlider;
                @Slider.canceled -= m_Wrapper.m_ControlsMenuActionsCallbackInterface.OnSlider;
                @Back.started -= m_Wrapper.m_ControlsMenuActionsCallbackInterface.OnBack;
                @Back.performed -= m_Wrapper.m_ControlsMenuActionsCallbackInterface.OnBack;
                @Back.canceled -= m_Wrapper.m_ControlsMenuActionsCallbackInterface.OnBack;
            }
            m_Wrapper.m_ControlsMenuActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Slider.started += instance.OnSlider;
                @Slider.performed += instance.OnSlider;
                @Slider.canceled += instance.OnSlider;
                @Back.started += instance.OnBack;
                @Back.performed += instance.OnBack;
                @Back.canceled += instance.OnBack;
            }
        }
    }
    public ControlsMenuActions @ControlsMenu => new ControlsMenuActions(this);

    // TradesMenu
    private readonly InputActionMap m_TradesMenu;
    private ITradesMenuActions m_TradesMenuActionsCallbackInterface;
    private readonly InputAction m_TradesMenu_Scroll;
    private readonly InputAction m_TradesMenu_Close;
    public struct TradesMenuActions
    {
        private @PlayerControls m_Wrapper;
        public TradesMenuActions(@PlayerControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Scroll => m_Wrapper.m_TradesMenu_Scroll;
        public InputAction @Close => m_Wrapper.m_TradesMenu_Close;
        public InputActionMap Get() { return m_Wrapper.m_TradesMenu; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(TradesMenuActions set) { return set.Get(); }
        public void SetCallbacks(ITradesMenuActions instance)
        {
            if (m_Wrapper.m_TradesMenuActionsCallbackInterface != null)
            {
                @Scroll.started -= m_Wrapper.m_TradesMenuActionsCallbackInterface.OnScroll;
                @Scroll.performed -= m_Wrapper.m_TradesMenuActionsCallbackInterface.OnScroll;
                @Scroll.canceled -= m_Wrapper.m_TradesMenuActionsCallbackInterface.OnScroll;
                @Close.started -= m_Wrapper.m_TradesMenuActionsCallbackInterface.OnClose;
                @Close.performed -= m_Wrapper.m_TradesMenuActionsCallbackInterface.OnClose;
                @Close.canceled -= m_Wrapper.m_TradesMenuActionsCallbackInterface.OnClose;
            }
            m_Wrapper.m_TradesMenuActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Scroll.started += instance.OnScroll;
                @Scroll.performed += instance.OnScroll;
                @Scroll.canceled += instance.OnScroll;
                @Close.started += instance.OnClose;
                @Close.performed += instance.OnClose;
                @Close.canceled += instance.OnClose;
            }
        }
    }
    public TradesMenuActions @TradesMenu => new TradesMenuActions(this);
    private int m_GamepadSchemeIndex = -1;
    public InputControlScheme GamepadScheme
    {
        get
        {
            if (m_GamepadSchemeIndex == -1) m_GamepadSchemeIndex = asset.FindControlSchemeIndex("Gamepad");
            return asset.controlSchemes[m_GamepadSchemeIndex];
        }
    }
    private int m_KeyboardSchemeIndex = -1;
    public InputControlScheme KeyboardScheme
    {
        get
        {
            if (m_KeyboardSchemeIndex == -1) m_KeyboardSchemeIndex = asset.FindControlSchemeIndex("Keyboard");
            return asset.controlSchemes[m_KeyboardSchemeIndex];
        }
    }
    public interface IPlayerActions
    {
        void OnMove(InputAction.CallbackContext context);
        void OnLook(InputAction.CallbackContext context);
        void OnJump(InputAction.CallbackContext context);
        void OnSprint(InputAction.CallbackContext context);
        void OnInteract(InputAction.CallbackContext context);
        void OnOpenItemMenu(InputAction.CallbackContext context);
        void OnOpenTimeMenu(InputAction.CallbackContext context);
        void OnOpenMainMenu(InputAction.CallbackContext context);
        void OnOpenTradesMenu(InputAction.CallbackContext context);
    }
    public interface IUIActions
    {
        void OnCloseItemMenu(InputAction.CallbackContext context);
        void OnMoveItemSelection(InputAction.CallbackContext context);
        void OnRemoveSelectedItem(InputAction.CallbackContext context);
    }
    public interface IDialogueActions
    {
        void OnNextOption(InputAction.CallbackContext context);
        void OnPrevOption(InputAction.CallbackContext context);
        void OnSelectOption(InputAction.CallbackContext context);
        void OnEndConversation(InputAction.CallbackContext context);
    }
    public interface ITimeUIActions
    {
        void OnMoveTimeSelection(InputAction.CallbackContext context);
        void OnCloseTimeMenu(InputAction.CallbackContext context);
    }
    public interface IMainMenuActions
    {
        void OnMoveSelection(InputAction.CallbackContext context);
        void OnSelect(InputAction.CallbackContext context);
        void OnContinue(InputAction.CallbackContext context);
    }
    public interface IControlsMenuActions
    {
        void OnSlider(InputAction.CallbackContext context);
        void OnBack(InputAction.CallbackContext context);
    }
    public interface ITradesMenuActions
    {
        void OnScroll(InputAction.CallbackContext context);
        void OnClose(InputAction.CallbackContext context);
    }
}
